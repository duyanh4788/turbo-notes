name: CI/CD for Turbo Monorepo (Tag-based)

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ["users", "notes", "notifications"]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build ${{ matrix.app }}
        run: npx turbo run build --filter=${{ matrix.app }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-api-image:${{ github.ref_name }} -f apps/${{ matrix.app }}/Dockerfile .
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-api-image:${{ github.ref_name }} ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-api-image:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-api-image:${{ github.ref_name }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-api-image:latest       

  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        app: ["users-api", "notes-api", "notifications-api"]
    steps:
      - name: Deploy ${{ matrix.app }} to Ubuntu Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
              set -e
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
              
              mkdir -p ~/${{ secrets.PATH_FLODER }}/${{ secrets.PROJECT }}/${{ matrix.app }}
              docker pull ${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-image:${{ github.ref_name }}
              cd ~/${{ secrets.PATH_FLODER }}/${{ secrets.PROJECT }}/${{ matrix.app }}
              export IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ matrix.app }}-image:${{ github.ref_name }}"
              docker compose up -d --force-recreate
